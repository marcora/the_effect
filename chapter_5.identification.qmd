---
title: "chapter_5.identification"
format: html
---

```{r}
#| output: false
library(tidyverse)
library(ggformula)
library(mosaic)

theme_set(theme_minimal())
set.seed(666)
```

Let’s generate some data. A good way to think about how DGPs can help with research is to cheat a little and make some data where we know the data generating process for sure.

In the world that we’re crafting, these will be the laws:

-   Income is log-normally distributed (see Chapter 3)

-   Being brown-haired gives you a 10% income boost

-   20% of people are naturally brown-haired

-   Having a college degree gives you a 20% income boost

-   30% of people have college degrees

-   40% of people who don’t have brown hair or a college degree will choose to dye their hair brown

$Pr(College) = .3$

$Pr(BrownHair) = .2 + .8\times.4\times(College == 0)$

$log(Income) = .1\times BrownHair + .2\times College + \varepsilon$

where $\varepsilon$ is normally distributed.

I'm approximating above by saying there's a "10%" and "20%" boost from being brown-haired or having a degree. Really these $.1$ and $.2$ boosts to $log(Income)$ give $e^{1.1}$ and $e^{1.2}$ boosts, which are more like 9.5% and 18.2%.

```{r}
n <- 1000

college <- rbinom(n, 1, .3)
brownhair <- rbinom(n, 1, .2 + .8 * .4 * (college == 0))
logincome <- .1 * brownhair + .2 * college + rnorm(n, 0, .1)

d <- tibble(college, brownhair, logincome)
```

Let’s say that we have some data that has been generated from these laws, but we have *no idea* what the laws are. Now let’s say we’re interested in the effect of being brown-haired on income. We might start by looking at the distribution of income by whether someone is brown-haired or not, or by just looking at average income by hair color.

```{r}
gf_density(~ logincome, color = ~ factor(brownhair), data = d)
```

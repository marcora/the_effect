---
title: "chapter_5.identification"
format:
  html:
    df-print: paged
    toc: true
---
## Setup environment

```{r}
#| output: false
library(tidyverse)
library(ggformula)
library(mosaic)
library(simDAG)

theme_set(theme_minimal())
set.seed(666)
```

## Data Generating Process

Let’s generate some data. A good way to think about how DGPs can help with research is to cheat a little and make some data where we know the data generating process for sure.

In the world that we’re crafting, these will be the laws:

-   Income is log-normally distributed

-   30% of people have college degrees

-   20% of people are naturally brown-haired (i.e., 80% are NOT naturally brown-haired)

-   40% of people who don’t have brown hair OR a college degree will choose to dye their hair brown

-   Being brown-haired gives you a 10% (log)income boost

-   Having a college degree gives you a 20% (log)income boost

Let’s say that we have some data that has been generated from these laws, but we have *no idea* what the laws are.

### Simulation using RNG

```{r}
n <- 1000

college <- rbinom(n, size = 1, prob = .3)
brownhair <- rbinom(n, size = 1, prob = .2 + .8 * .4 * (college == 0))
logincome <- rnorm(n, mean = 4 + .1 * brownhair + .2 * college, sd = .1)

sim_dat <- tibble(college, brownhair, logincome)

sim_dat
```

```{r}
lm(logincome ~ factor(brownhair), data = sim_dat)

lm(logincome ~ factor(brownhair) + factor(college), data = sim_dat)
```

Now let’s say we’re interested in the effect of being brown-haired on income. We might start by looking at the distribution of income by whether someone is brown-haired or not, or by just looking at average income by hair color.

```{r}
gf_density(~ logincome, fill = ~ factor(brownhair), data = sim_dat)
```

```{r}
exp(mean(logincome ~ factor(brownhair), data = sim_dat))
```

## Simulation using DAG

```{r}
dag <- empty_dag() +
  node("college", type = "rbernoulli", p = 0.3) +
  node("brownhair", type = "binomial", formula = ~ .2 + .32 * college) +
  node("logincome", type = "gaussian", formula = ~ 4 + .1 * brownhair + .2 * college, error = .1)

plot(dag)

dag_dat <- sim_from_dag(dag, n_sim = 1000)

dag_dat
```

```{r}
lm(logincome ~ factor(brownhair), data = dag_dat)

lm(logincome ~ factor(brownhair) + factor(college), data = dag_dat)
```


```{r}
gf_density(~ logincome, fill = ~ factor(brownhair), data = dag_dat)
```

```{r}
exp(mean(logincome ~ factor(brownhair), data = dag_dat))
```
